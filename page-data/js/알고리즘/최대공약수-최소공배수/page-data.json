{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/js/알고리즘/최대공약수-최소공배수/",
    "result": {"data":{"site":{"siteMetadata":{"title":"0andme.github.io"}},"markdownRemark":{"id":"76eeb562-271e-5750-b1a1-a8ba6056911e","excerpt":"코드 미리보기 최대 공약수 GCD (Greatest Common Divisor) 최대 공약수를 구하는 방법은 두 수를 a,b라고 할 때, 2부터 min(a,b)까지의 수로 두 수를 나누었을 때 동시에 나머지를 0으로 만드는 수를 찾으면 된다. 코드 for문을 끝까지 돌며 조건에 맞는 i…","html":"<h4 id=\"코드-미리보기\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C-%EB%AF%B8%EB%A6%AC%EB%B3%B4%EA%B8%B0\" aria-label=\"코드 미리보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드 미리보기</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//최대 공약수</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">gcd</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">%</span> b <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> b <span class=\"token operator\">:</span> <span class=\"token function\">gcd</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> a <span class=\"token operator\">%</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 최소 공배수</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">lcm</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">*</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token function\">gcd</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span></code></pre></div>\n<h4 id=\"최대-공약수-gcd-greatest-common-divisor\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EB%8C%80-%EA%B3%B5%EC%95%BD%EC%88%98-gcd-greatest-common-divisor\" aria-label=\"최대 공약수 gcd greatest common divisor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최대 공약수 GCD (Greatest Common Divisor)</h4>\n<p>최대 공약수를 구하는 방법은 두 수를 a,b라고 할 때, 2부터 min(a,b)까지의 수로 두 수를 나누었을 때 동시에 나머지를 0으로 만드는 수를 찾으면 된다.</p>\n<h5 id=\"코드\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C\" aria-label=\"코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드</h5>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> <span class=\"token function-variable function\">getGCD</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> gcd <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// i값으로 두 수를 나눴을 때 나머지가 모두 0이면 최대공약수</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">%</span> i <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> b <span class=\"token operator\">%</span> i <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      gcd <span class=\"token operator\">=</span> i\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> gcd\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>for문을 끝까지 돌며 조건에 맞는 i값을 갱신하고 결과적으로 a,b의 약수 중에 가장 큰 약수 = 최대 공약수가 변수 i에 저장된다.</p>\n<h4 id=\"최소공배수-lcm-least-common-multiple\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98-lcm-least-common-multiple\" aria-label=\"최소공배수 lcm least common multiple permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최소공배수 LCM (Least Common Multiple)</h4>\n<p>최소공배수를 구하는 가장 쉬운 방법은 두 수를 a,b라고 할 때, <strong>1</strong>부터 시작하여 두 수로 나누었을 때 나머지가 0 이 되는 값을 찾으면 된다.</p>\n<h5 id=\"코드-1\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C-1\" aria-label=\"코드 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드</h5>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> <span class=\"token function-variable function\">getLCM</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> lcm <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// lcm값을 두 수로 나눴을 때 나머지가 모두 0이면 최소공배수</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lcm <span class=\"token operator\">%</span> a <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> lcm <span class=\"token operator\">%</span> b <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      lcm <span class=\"token operator\">=</span> i\n      <span class=\"token keyword\">break</span>\n    <span class=\"token punctuation\">}</span>\n    lcm<span class=\"token operator\">++</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> lcm\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"유클리드-호제법을-이용\" style=\"position:relative;\"><a href=\"#%EC%9C%A0%ED%81%B4%EB%A6%AC%EB%93%9C-%ED%98%B8%EC%A0%9C%EB%B2%95%EC%9D%84-%EC%9D%B4%EC%9A%A9\" aria-label=\"유클리드 호제법을 이용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>유클리드 호제법을 이용</h4>\n<p>유클리드 호제법의 기본 원리는 두 수를 a, b라고 할 때 <code class=\"language-text\">GCD(a, b) = GCD(b, a%b)</code>라는 점이다.</p>\n<p><strong>재귀</strong>함수인 GCD를 돌다가 GCD(a, b)에서 <strong>b자리의 값이 0이 되면 그때의 a 값이 최대 공약수</strong>가 되는 것이다. 코드로 나타내면 아래와 같다.</p>\n<h5 id=\"코드-2\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C-2\" aria-label=\"코드 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드</h5>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> <span class=\"token function-variable function\">getGCD</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token function\">getGCD</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> a <span class=\"token operator\">%</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> a<span class=\"token punctuation\">)</span></code></pre></div>\n<p>처음 호출할 때 a와 b 값의 크기는 고려하지 않아도 된다. a가 b보다 작아도 알아서 스왑되기 때문이다. 아래는 예시이다.</p>\n<div class=\"tab bottom10\">ex)</div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">getGCD(16,24) -> getGCD(24,16%24) = getGCD(24,16)\n\ngetGCD(24,16) -> getGCD(16,8)\n</code></pre></div>\n<p><strong>최소공배수</strong>는 최대공약수를 이용하여 구할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">lcm= a \\* b / gcd\n</code></pre></div>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EC%BD%94%EB%93%9C-%EB%AF%B8%EB%A6%AC%EB%B3%B4%EA%B8%B0\">코드 미리보기</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B5%9C%EB%8C%80-%EA%B3%B5%EC%95%BD%EC%88%98-gcd-greatest-common-divisor\">최대 공약수 GCD (Greatest Common Divisor)</a></p>\n<ul>\n<li><a href=\"#%EC%BD%94%EB%93%9C\">코드</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98-lcm-least-common-multiple\">최소공배수 LCM (Least Common Multiple)</a></p>\n<ul>\n<li><a href=\"#%EC%BD%94%EB%93%9C-1\">코드</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%9C%A0%ED%81%B4%EB%A6%AC%EB%93%9C-%ED%98%B8%EC%A0%9C%EB%B2%95%EC%9D%84-%EC%9D%B4%EC%9A%A9\">유클리드 호제법을 이용</a></p>\n<ul>\n<li><a href=\"#%EC%BD%94%EB%93%9C-2\">코드</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"최대공약수 최소공배수","date":"April 18, 2022","description":null,"categories":["js"]}},"previous":{"fields":{"slug":"/js/정규표현식/정규표현식-뿌시기-(0)- 정규식-생성/"},"frontmatter":{"title":"정규 표현식 뿌시기 - (0) 정규식 생성"}},"next":{"fields":{"slug":"/js/정규표현식/정규표현식-뿌시기-(1)-정규식-메소드/"},"frontmatter":{"title":"정규 표현식 뿌시기 - (1) 정규식 메소드"}}},"pageContext":{"id":"76eeb562-271e-5750-b1a1-a8ba6056911e","previousPostId":"56986a4e-e958-5594-b775-a751d4263dae","nextPostId":"d3c07bdd-2595-53c0-b33f-39aa74080137"}},
    "staticQueryHashes": ["2841359383","3284135133","4046992349"]}