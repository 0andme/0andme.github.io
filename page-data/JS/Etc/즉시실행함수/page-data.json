{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/js/etc/즉시실행함수/",
    "result": {"data":{"site":{"siteMetadata":{"title":"0andme.github.io"}},"markdownRemark":{"id":"d469f534-504a-5f9d-9cad-ec4c539f5544","excerpt":"공부하며 정리한 내용입니다 IIFE 즉시 실행 함수 Immediately Invoked Function Expression…","html":"<blockquote>\n<p>공부하며 정리한 내용입니다</p>\n</blockquote>\n<h4 id=\"iife-즉시-실행-함수\" style=\"position:relative;\"><a href=\"#iife-%EC%A6%89%EC%8B%9C-%EC%8B%A4%ED%96%89-%ED%95%A8%EC%88%98\" aria-label=\"iife 즉시 실행 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IIFE 즉시 실행 함수</h4>\n<p><strong>I</strong>mmediately <strong>I</strong>nvoked <strong>F</strong>unction <strong>E</strong>xpression\n직역하면, 즉시 호출 함수 표현.\n<br>즉, 함수를 정의한 자리에서 바로 실행하는 표현을 말한다.</p>\n<h5 id=\"-작성-법---괄호-괄호-혹은-괄호-안의-괄호\" style=\"position:relative;\"><a href=\"#-%EC%9E%91%EC%84%B1-%EB%B2%95---%EA%B4%84%ED%98%B8-%EA%B4%84%ED%98%B8-%ED%98%B9%EC%9D%80-%EA%B4%84%ED%98%B8-%EC%95%88%EC%9D%98-%EA%B4%84%ED%98%B8\" aria-label=\" 작성 법   괄호 괄호 혹은 괄호 안의 괄호 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✤ 작성 법 - 괄호 괄호 혹은 괄호 안의 괄호</h5>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token punctuation\">;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>괄호와 괄호<code class=\"language-text\">(함수 리터럴)()</code> 혹은 괄호 안의 괄호로 이루어진 <code class=\"language-text\">(함수 리터럴())</code> 의 형태로 작성한다. 화살표 함수의 경우 <code class=\"language-text\">(( ) => { })()</code>의 형태처럼 화살표 함수를 괄호로 묶어 뒤쪽 괄호와 구분해줘야 에러가 없다.(괄호 안의 괄호 형태 불가)</p>\n<p>여기서 <strong>함수 리터럴</strong>이란, js에서의 함수 표현식을 말한다.</p>\n<ol>\n<li>예약어 function</li>\n<li>함수명 <code class=\"language-text\">선택</code></li>\n<li>매개변수</li>\n<li>실행문</li>\n</ol>\n<p>으로 이루어진다. 함수명은 선택적인데 아래와 같이 함수를 변수로 지정하거나, 즉시 실행 함수 일 때 생략 가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">func</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h5 id=\"-유의사항---세미콜론으로-윗-코드와-구분을-하자\" style=\"position:relative;\"><a href=\"#-%EC%9C%A0%EC%9D%98%EC%82%AC%ED%95%AD---%EC%84%B8%EB%AF%B8%EC%BD%9C%EB%A1%A0%EC%9C%BC%EB%A1%9C-%EC%9C%97-%EC%BD%94%EB%93%9C%EC%99%80-%EA%B5%AC%EB%B6%84%EC%9D%84-%ED%95%98%EC%9E%90\" aria-label=\" 유의사항   세미콜론으로 윗 코드와 구분을 하자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✤ 유의사항 - 세미콜론으로 윗 코드와 구분을 하자</h5>\n<p>자바스크립트에서는 세미콜론을 적지 않아도 코드가 잘 실행되는데 자동 처리가 되지 않을 경우를 방지하기 위해, 윗 문장과의 구분을 위해서 <strong>즉시실행 함수 맨 앞에 세미콜론을 꼭 붙이자</strong> <span class=\"light\">바로 앞 코드 뒤에 붙이거나</span></p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#iife-%EC%A6%89%EC%8B%9C-%EC%8B%A4%ED%96%89-%ED%95%A8%EC%88%98\">IIFE 즉시 실행 함수</a></p>\n<ul>\n<li><a href=\"#-%EC%9E%91%EC%84%B1-%EB%B2%95---%EA%B4%84%ED%98%B8-%EA%B4%84%ED%98%B8-%ED%98%B9%EC%9D%80-%EA%B4%84%ED%98%B8-%EC%95%88%EC%9D%98-%EA%B4%84%ED%98%B8\">✤ 작성 법 - 괄호 괄호 혹은 괄호 안의 괄호</a></li>\n<li><a href=\"#-%EC%9C%A0%EC%9D%98%EC%82%AC%ED%95%AD---%EC%84%B8%EB%AF%B8%EC%BD%9C%EB%A1%A0%EC%9C%BC%EB%A1%9C-%EC%9C%97-%EC%BD%94%EB%93%9C%EC%99%80-%EA%B5%AC%EB%B6%84%EC%9D%84-%ED%95%98%EC%9E%90\">✤ 유의사항 - 세미콜론으로 윗 코드와 구분을 하자</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"IIFE 즉시 실행 함수","date":"May 06, 2022","description":"Immediately Invoked Function Expression 즉시 실행 함수","categories":["js"]}},"previous":{"fields":{"slug":"/js/string/string.charCodeAt/"},"frontmatter":{"title":"String.charCodeAt()"}},"next":null},"pageContext":{"id":"d469f534-504a-5f9d-9cad-ec4c539f5544","previousPostId":"e384fa31-59a0-52bb-94b7-aaaff35115bd","nextPostId":null}},
    "staticQueryHashes": ["2841359383","3284135133","4046992349"]}