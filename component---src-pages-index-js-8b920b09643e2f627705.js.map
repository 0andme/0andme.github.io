{"version":3,"file":"component---src-pages-index-js-8b920b09643e2f627705.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/CategoryListNav/CategoryItem.js","webpack://gatsby-starter-blog/./src/components/CategoryListNav/CategoryList.js","webpack://gatsby-starter-blog/./src/components/PostList/PostItem.js","webpack://gatsby-starter-blog/./src/components/PostList/PostList.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["import { css } from \"@emotion/react\"\nimport React from \"react\"\n\nfunction CategoryItem({ item, selectCate, setSelectCate }) {\n  const { fieldValue } = item\n  const { totalCount } = item\n  return (\n    <button\n      type=\"button\"\n      className={item.fieldValue === selectCate ? \"isSelect\" : \"\"}\n      onClick={() => {\n        setSelectCate(item.fieldValue)\n      }}\n      css={CategoryItemStyle}\n    >\n      {fieldValue.replace(/^./, fieldValue[0].toUpperCase())}\n      <span className=\"totalNum\"> {` (${totalCount})`}</span>\n    </button>\n  )\n}\nconst CategoryItemStyle = css`\n  cursor: pointer;\n  font-weight: 700;\n  color: var(--black);\n  margin: 0;\n  padding: 5px 16px;\n  border-radius: 12px;\n  border: none;\n  box-shadow: 0 1px 1px rgb(0 0 0 / 10%);\n  background-color: var(--lighterGray);\n  &:hover {\n    background-color: var(--lightGray);\n  }\n  &.isSelect {\n    background-color: #fff;\n    border: 2px solid var(--primary);\n  }\n  .totalNum {\n    opacity: 0.5;\n  }\n`\nexport default CategoryItem\n","import { css } from \"@emotion/react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport React from \"react\"\nimport CategoryItem from \"./CategoryItem\"\n\nfunction CategoryList({ selectCate, setSelectCate, allPostNum }) {\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n        group(field: frontmatter___categories) {\n          edges {\n            node {\n              id\n            }\n          }\n          fieldValue\n          totalCount\n        }\n      }\n    }\n  `)\n  const { group: cateList } = data.allMarkdownRemark\n  return (\n    <ul css={CategoryListStyle}>\n      <CategoryItem\n        selectCate={selectCate}\n        setSelectCate={setSelectCate}\n        item={{ fieldValue: \"All\", totalCount: allPostNum }}\n      />\n      {cateList.map(cateItem => {\n        const { fieldValue } = cateItem\n        return (\n          <CategoryItem\n            selectCate={selectCate}\n            setSelectCate={setSelectCate}\n            key={fieldValue}\n            item={cateItem}\n          />\n        )\n      })}\n    </ul>\n  )\n}\n\nconst CategoryListStyle = css`\n  padding: 10px 0;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  gap: 10px;\n  list-style-type: none;\n`\nexport default CategoryList\n","import { css } from \"@emotion/react\"\nimport { Link } from \"gatsby\"\nimport React from \"react\"\nimport PostCategoryList from \"../PostCategoryList/PostCategoryList\"\nfunction PostItem({ post }) {\n  const title = post.frontmatter.title || post.fields.slug\n  return (\n    <li css={PostItemStyle}>\n      <article\n        className=\"post-list-item\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <Link className=\"title\" to={post.fields.slug} itemProp=\"url\">\n            {title}\n          </Link>\n        </header>\n        <small>{post.frontmatter.date}</small>\n        <section>\n          <p\n            dangerouslySetInnerHTML={{\n              __html: post.frontmatter.description || post.excerpt,\n            }}\n            itemProp=\"description\"\n          />\n        </section>\n        <PostCategoryList cateList={post.frontmatter.categories} />\n      </article>\n    </li>\n  )\n}\nconst PostItemStyle = css`\n  margin: 0;\n  border-bottom: 2px solid var(--lightGray);\n  &:last-child {\n    border: none;\n  }\n  .post-list-item {\n    margin: 20px 0 16px;\n  }\n  header {\n    margin: 0;\n    .title {\n      color: rgba(33, 37, 41, 0.8);\n      display: inline-block;\n      width: 100%;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      text-decoration: none;\n      font-size: 2em;\n      font-weight: 700;\n      &:hover {\n        color: var(--primary);\n      }\n    }\n  }\n`\nexport default PostItem\n","import { css } from \"@emotion/react\"\nimport React from \"react\"\nimport PostItem from \"./PostItem\"\n\nfunction PostList({ selectCate, posts }) {\n  // all일 때 모든 카테고리 리스트 출력\n  if (\"All\" === selectCate) {\n    return (\n      <ol css={PostListStyle}>\n        {posts.map(post => {\n          return <PostItem key={post.fields.slug} post={post} />\n        })}\n      </ol>\n    )\n  }\n  // 카테고리를 눌렀을 때\n  // 해당 카테고리를 갖는 포스트 출력\n  else {\n    const filterPosts = posts.filter(post => {\n      return post.frontmatter.categories.find(cate => cate === selectCate)\n    })\n    return (\n      <ol css={PostListStyle}>\n        {filterPosts.map(post => {\n          return <PostItem key={post.fields.slug} post={post} />\n        })}\n      </ol>\n    )\n  }\n}\nconst PostListStyle = css`\n  list-style: none;\n`\nexport default PostList\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport ContentLayout from \"../components/Layout/Layout\"\nimport Seo from \"../components/seo\"\nimport Bio from \"../components/Bio/Bio\"\nimport Header from \"../components/Header/Header\"\nimport CategoryList from \"../components/CategoryListNav/CategoryList\"\nimport PostList from \"../components/PostList/PostList\"\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n  const [selectCate, setSelectCate] = React.useState(\"All\")\n  if (posts.length === 0) {\n    return (\n      <>\n        <Header isMain={true} />\n        <ContentLayout location={location} title={siteTitle}>\n          <Seo title=\"All posts\" />\n          <Bio />\n          <p>\n            No blog posts found. Add markdown posts to \"content/blog\" (or the\n            directory you specified for the \"gatsby-source-filesystem\" plugin in\n            gatsby-config.js).\n          </p>\n        </ContentLayout>\n      </>\n    )\n  }\n\n  return (\n    <div>\n      <Header isMain={true} title={siteTitle} />\n      <ContentLayout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <CategoryList\n          selectCate={selectCate}\n          setSelectCate={setSelectCate}\n          allPostNum={posts.length}\n        />\n        <PostList selectCate={selectCate} posts={posts} />\n      </ContentLayout>\n    </div>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          categories\n        }\n      }\n    }\n  }\n`\n"],"names":["CategoryItemStyle","item","selectCate","setSelectCate","fieldValue","totalCount","type","className","onClick","css","replace","toUpperCase","CategoryListStyle","allPostNum","cateList","useStaticQuery","allMarkdownRemark","group","map","cateItem","key","PostItemStyle","post","title","frontmatter","fields","slug","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","PostCategoryList","categories","PostListStyle","posts","filterPosts","filter","find","cate","data","location","siteTitle","site","siteMetadata","nodes","React","length","Header","isMain","Bio"],"sourceRoot":""}