{"version":3,"file":"component---src-pages-search-js-c0ba205450d145086a85.js","mappings":"yMAgCA,IAAMA,EAAa,2WA2BnB,EAvDA,YAA6B,IAATC,EAAQ,EAARA,KACZC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KACpD,OACE,cAAIC,IAAKN,IACP,mBACEO,UAAU,iBACVC,WAAS,EACTC,SAAS,8BAET,uBACE,QAAC,EAAAC,KAAD,CAAMH,UAAU,QAAQI,GAAIV,EAAKG,OAAOC,KAAMO,SAAS,OACpDV,KAGL,qBAAQD,EAAKE,YAAYU,OACzB,wBACE,aACEC,wBAAyB,CACvBC,OAAQd,EAAKE,YAAYa,aAAef,EAAKgB,SAE/CL,SAAS,kBAGb,QAACM,EAAA,EAAD,CAAkBC,SAAUlB,EAAKE,YAAYiB,gBCerD,IAAMC,EAAa,yCAGnB,EAzCA,YAAmD,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,WAAYC,EAAS,EAATA,MAEvC,GAAI,QAAUD,EACZ,OACE,cAAIjB,IAAKe,GACNG,EAAMC,KAAI,SAAAxB,GACT,OAAO,QAAC,EAAD,CAAUyB,IAAKzB,EAAKG,OAAOC,KAAMJ,KAAMA,QAQpD,IAAI0B,EAAc,GAelB,OAZEA,EADEL,EACYE,EAAMI,QAAO,SAAA3B,GAAS,IAAD,IACjC,OACE,UAAAA,EAAKE,YAAYiB,kBAAjB,eAA6BS,MAAK,SAAAC,GAAI,OAAIA,IAASP,QAAnD,UACAtB,EAAKE,YAAY4B,qBADjB,aACA,EAAgCF,MAAK,SAAAC,GAAI,OAAIA,IAASR,SAI5CE,EAAMI,QAAO,SAAA3B,GAAS,IAAD,EACjC,iBAAOA,EAAKE,YAAYiB,kBAAxB,aAAO,EAA6BS,MAAK,SAAAC,GAAI,OAAIA,IAASP,SAK5D,cAAIjB,IAAKe,GACNM,EAAYF,KAAI,SAAAxB,GACf,OAAO,QAAC,EAAD,CAAUyB,IAAKzB,EAAKG,OAAOC,KAAMJ,KAAMA,U,iGCiBxD,UAxBA,YAAqC,IAAD,IAAlB+B,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SAChBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBlC,QAAS,GAC7CmC,GAAa,UAAAJ,EAASK,aAAT,eAAgBD,aAAc,GAE3CE,GADQP,EAAKQ,kBAAkBC,OAAS,IAClBb,QAAO,SAAA3B,GACjC,MAA2CA,EAAKE,YAAxCa,EAAR,EAAQA,YAAad,EAArB,EAAqBA,MAAOkB,EAA5B,EAA4BA,WAC5B,OACGJ,GACCA,EAAY0B,cAAcC,SAASN,EAAWK,gBAC/CxC,GAASA,EAAMwC,cAAcC,SAASN,EAAWK,gBACjDtB,GAAcA,EAAWwB,KAAK,IAAIF,cAAcC,SAASN,MAG9D,OACE,oBACE,QAAC,IAAD,CAAQQ,QAAQ,EAAO3C,MAAOgC,KAC9B,QAAC,IAAD,CAAeD,SAAUA,EAAU/B,MAAOgC,IACxC,QAAC,IAAD,CAAKhC,MAAUmC,EAAL,YACV,QAAC,IAAD,CAAUd,WAAY,MAAOC,MAAOe","sources":["webpack://gatsby-starter-blog/./src/components/PostList/PostItem.js","webpack://gatsby-starter-blog/./src/components/PostList/PostList.js","webpack://gatsby-starter-blog/./src/pages/search.js"],"sourcesContent":["import { css } from \"@emotion/react\"\nimport { Link } from \"gatsby\"\nimport React from \"react\"\nimport PostCategoryList from \"../PostCategoryList/PostCategoryList\"\nfunction PostItem({ post }) {\n  const title = post.frontmatter.title || post.fields.slug\n  return (\n    <li css={PostItemStyle}>\n      <article\n        className=\"post-list-item\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <Link className=\"title\" to={post.fields.slug} itemProp=\"url\">\n            {title}\n          </Link>\n        </header>\n        <small>{post.frontmatter.date}</small>\n        <section>\n          <p\n            dangerouslySetInnerHTML={{\n              __html: post.frontmatter.description || post.excerpt,\n            }}\n            itemProp=\"description\"\n          />\n        </section>\n        <PostCategoryList cateList={post.frontmatter.categories} />\n      </article>\n    </li>\n  )\n}\nconst PostItemStyle = css`\n  margin: 0;\n  border-bottom: 2px solid var(--lightGray);\n  &:last-child {\n    border: none;\n  }\n  .post-list-item {\n    margin: 20px 0 16px;\n  }\n  header {\n    margin: 0;\n    .title {\n      color: rgba(33, 37, 41, 0.8);\n      display: inline-block;\n      width: 100%;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      text-decoration: none;\n      font-size: 2em;\n      font-weight: 700;\n      &:hover {\n        color: var(--primary);\n      }\n    }\n  }\n`\nexport default PostItem\n","import { css } from \"@emotion/react\"\nimport React from \"react\"\nimport PostItem from \"./PostItem\"\n\nfunction PostList({ subCate, selectCate, posts }) {\n  // all일 때 모든 카테고리 리스트 출력\n  if (\"All\" === selectCate) {\n    return (\n      <ol css={PostListStyle}>\n        {posts.map(post => {\n          return <PostItem key={post.fields.slug} post={post} />\n        })}\n      </ol>\n    )\n  }\n  // 카테고리를 눌렀을 때\n  // 해당 카테고리를 갖는 포스트 출력\n  else {\n    let filterPosts = []\n    // 선택된 하위 카테고리가 있다면\n    if (subCate) {\n      filterPosts = posts.filter(post => {\n        return (\n          post.frontmatter.categories?.find(cate => cate === selectCate) &&\n          post.frontmatter.subCategories?.find(cate => cate === subCate)\n        )\n      })\n    } else {\n      filterPosts = posts.filter(post => {\n        return post.frontmatter.categories?.find(cate => cate === selectCate)\n      })\n    }\n\n    return (\n      <ol css={PostListStyle}>\n        {filterPosts.map(post => {\n          return <PostItem key={post.fields.slug} post={post} />\n        })}\n      </ol>\n    )\n  }\n}\nconst PostListStyle = css`\n  list-style: none;\n`\nexport default PostList\n","import { graphql, useStaticQuery } from \"gatsby\"\nimport React from \"react\"\nimport Header from \"../components/Header/Header\"\nimport ContentLayout from \"../components/Layout/Layout\"\nimport PostList from \"../components/PostList/PostList\"\nimport Seo from \"../components/seo\"\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          categories\n        }\n      }\n    }\n  }\n`\nfunction Search({ data, location }) {\n  const siteTitle = data.site.siteMetadata?.title || \"\"\n  const searchWord = location.state?.searchWord || \"\"\n  const posts = data.allMarkdownRemark.nodes || []\n  const filteredPosts = posts.filter(post => {\n    const { description, title, categories } = post.frontmatter\n    return (\n      (description &&\n        description.toLowerCase().includes(searchWord.toLowerCase())) ||\n      (title && title.toLowerCase().includes(searchWord.toLowerCase())) ||\n      (categories && categories.join(\"\").toLowerCase().includes(searchWord))\n    )\n  })\n  return (\n    <div>\n      <Header isMain={false} title={siteTitle} />\n      <ContentLayout location={location} title={siteTitle}>\n        <Seo title={`${searchWord} 검색 결과`} />\n        <PostList selectCate={\"All\"} posts={filteredPosts} />\n      </ContentLayout>\n    </div>\n  )\n}\n\nexport default Search\n"],"names":["PostItemStyle","post","title","frontmatter","fields","slug","css","className","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","PostCategoryList","cateList","categories","PostListStyle","subCate","selectCate","posts","map","key","filterPosts","filter","find","cate","subCategories","data","location","siteTitle","site","siteMetadata","searchWord","state","filteredPosts","allMarkdownRemark","nodes","toLowerCase","includes","join","isMain"],"sourceRoot":""}