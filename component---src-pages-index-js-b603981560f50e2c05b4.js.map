{"version":3,"file":"component---src-pages-index-js-b603981560f50e2c05b4.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/Bio/Bio.js","webpack://gatsby-starter-blog/./src/components/PostList/PostItem.js","webpack://gatsby-starter-blog/./src/components/PostList/PostList.js","webpack://gatsby-starter-blog/./src/components/CategoryListNav/CategoryItem.js","webpack://gatsby-starter-blog/./src/components/CategoryListNav/CategoryList.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport styled from \"@emotion/styled\"\n\nfunction Bio() {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          description\n          social {\n            github\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n  const description = data.site.siteMetadata?.description\n  return (\n    <BioBox>\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../../images/profile.jpeg\"\n        width={100}\n        height={100}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <BioTextBox>\n          <div className=\"name\">\n            {author?.summary || null}{\" \"}\n            <Link className=\"aboutTag\" to={\"/about\"}>\n              @{author.name}\n            </Link>\n          </div>\n          <div>{description}</div>\n          <a className=\"link\" href={`${social?.github || ``}`}>\n            <StaticImage\n              className=\"logo\"\n              formats={[\"auto\", \"webp\", \"avif\"]}\n              src={\"../../images/github_logo.png\"}\n              quality={95}\n              alt=\"Profile picture\"\n            />\n            <span>Github</span>\n          </a>\n        </BioTextBox>\n      )}\n    </BioBox>\n  )\n}\nconst BioBox = styled.div`\n  display: flex;\n  height: fit-content;\n  flex-wrap: wrap;\n`\nconst BioTextBox = styled.div`\n  padding: 5px 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  a {\n    text-decoration: none;\n  }\n  .name {\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n    gap: 4px;\n    font-weight: 700;\n    font-size: 1.1em;\n  }\n  .aboutTag {\n    padding: 8px 10px;\n    border-radius: 10px;\n    color: #fff;\n    background-color: rgba(240, 62, 62, 0.8);\n    font-weight: 900;\n    &:hover {\n      border-color: var(--deepPink);\n      background-color: rgba(240, 62, 62, 0.6);\n    }\n  }\n  .link {\n    width: fit-content;\n    display: flex;\n    align-items: center;\n    gap: 4px;\n    color: var(--black);\n    padding: 4px 0;\n    border-radius: 10px;\n    .logo {\n      width: 20px;\n    }\n    &:hover {\n      background-color: #ced4da;\n      padding: 4px;\n    }\n  }\n`\nexport default Bio\n","import { css } from \"@emotion/react\"\nimport { Link } from \"gatsby\"\nimport React from \"react\"\nimport PostCategoryList from \"../PostCategoryList/PostCategoryList\"\nfunction PostItem({ post }) {\n  const title = post.frontmatter.title || post.fields.slug\n  return (\n    <li css={PostItemStyle}>\n      <article\n        className=\"post-list-item\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <Link className=\"title\" to={post.fields.slug} itemProp=\"url\">\n            {title}\n          </Link>\n        </header>\n        <small>{post.frontmatter.date}</small>\n        <section>\n          <p\n            dangerouslySetInnerHTML={{\n              __html: post.frontmatter.description || post.excerpt,\n            }}\n            itemProp=\"description\"\n          />\n        </section>\n        <PostCategoryList cateList={post.frontmatter.categories} />\n      </article>\n    </li>\n  )\n}\nconst PostItemStyle = css`\n  margin: 0;\n  border-bottom: 2px solid var(--lightGray);\n  &:last-child {\n    border: none;\n  }\n  .post-list-item {\n    margin: 20px 0 16px;\n  }\n  header {\n    margin: 0;\n    .title {\n      color: rgba(33, 37, 41, 0.8);\n      display: inline-block;\n      width: 100%;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      text-decoration: none;\n      font-size: 2em;\n      font-weight: 700;\n      &:hover {\n        color: var(--primary);\n      }\n    }\n  }\n`\nexport default PostItem\n","import { css } from \"@emotion/react\"\nimport React from \"react\"\nimport PostItem from \"./PostItem\"\n\nfunction PostList({ selectCate, posts }) {\n  // all일 때 모든 카테고리 리스트 출력\n  if (\"All\" === selectCate) {\n    return (\n      <ol css={PostListStyle}>\n        {posts.map(post => {\n          return <PostItem key={post.fields.slug} post={post} />\n        })}\n      </ol>\n    )\n  }\n  // 카테고리를 눌렀을 때\n  // 해당 카테고리를 갖는 포스트 출력\n  else {\n    const filterPosts = posts.filter(post => {\n      return post.frontmatter.categories.find(cate => cate === selectCate)\n    })\n    return (\n      <ol css={PostListStyle}>\n        {filterPosts.map(post => {\n          return <PostItem key={post.fields.slug} post={post} />\n        })}\n      </ol>\n    )\n  }\n}\nconst PostListStyle = css`\n  list-style: none;\n`\nexport default PostList\n","import { css } from \"@emotion/react\"\nimport React from \"react\"\n\nfunction CategoryItem({ item, selectCate, setSelectCate }) {\n  const { fieldValue } = item\n  const { totalCount } = item\n  return (\n    <button\n      type=\"button\"\n      className={item.fieldValue === selectCate ? \"isSelect\" : \"\"}\n      onClick={() => {\n        setSelectCate(item.fieldValue)\n      }}\n      css={CategoryItemStyle}\n    >\n      {fieldValue.replace(/^./, fieldValue[0].toUpperCase())}\n      <span className=\"totalNum\"> {` (${totalCount})`}</span>\n    </button>\n  )\n}\nconst CategoryItemStyle = css`\n  cursor: pointer;\n  font-weight: 700;\n  color: var(--black);\n  margin: 0;\n  padding: 5px 16px;\n  border-radius: 12px;\n  border: none;\n  box-shadow: 0 1px 1px rgb(0 0 0 / 10%);\n  background-color: var(--lighterGray);\n  &:hover {\n    background-color: var(--lightGray);\n  }\n  &.isSelect {\n    background-color: #fff;\n    border: 2px solid var(--primary);\n  }\n  .totalNum {\n    opacity: 0.5;\n  }\n`\nexport default CategoryItem\n","import { css } from \"@emotion/react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport React from \"react\"\nimport CategoryItem from \"./CategoryItem\"\n\nfunction CategoryList({ selectCate, setSelectCate, allPostNum }) {\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n        group(field: frontmatter___categories) {\n          edges {\n            node {\n              id\n            }\n          }\n          fieldValue\n          totalCount\n        }\n      }\n    }\n  `)\n  const { group: cateList } = data.allMarkdownRemark\n  return (\n    <ul css={CategoryListStyle}>\n      <CategoryItem\n        selectCate={selectCate}\n        setSelectCate={setSelectCate}\n        item={{ fieldValue: \"All\", totalCount: allPostNum }}\n      />\n      {cateList.map(cateItem => {\n        const { fieldValue } = cateItem\n        return (\n          <CategoryItem\n            selectCate={selectCate}\n            setSelectCate={setSelectCate}\n            key={fieldValue}\n            item={cateItem}\n          />\n        )\n      })}\n    </ul>\n  )\n}\n\nconst CategoryListStyle = css`\n  padding: 10px 0;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  gap: 10px;\n  list-style-type: none;\n`\nexport default CategoryList\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport ContentLayout from \"../components/Layout/Layout\"\nimport Seo from \"../components/seo\"\nimport Bio from \"../components/Bio/Bio\"\nimport Header from \"../components/Header/Header\"\nimport CategoryList from \"../components/CategoryListNav/CategoryList\"\nimport PostList from \"../components/PostList/PostList\"\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || \"\"\n  const posts = data.allMarkdownRemark.nodes\n  const [selectCate, setSelectCate] = React.useState(\"All\")\n  if (posts.length === 0) {\n    return (\n      <>\n        <Header isMain={true} />\n        <ContentLayout location={location} title={siteTitle}>\n          <Seo title=\"All posts\" />\n          <Bio />\n          <p>\n            No blog posts found. Add markdown posts to \"content/blog\" (or the\n            directory you specified for the \"gatsby-source-filesystem\" plugin in\n            gatsby-config.js).\n          </p>\n        </ContentLayout>\n      </>\n    )\n  }\n\n  return (\n    <div>\n      <Header isMain={true} title={siteTitle} />\n      <ContentLayout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <CategoryList\n          selectCate={selectCate}\n          setSelectCate={setSelectCate}\n          allPostNum={posts.length}\n        />\n        <PostList selectCate={selectCate} posts={posts} />\n      </ContentLayout>\n    </div>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          categories\n        }\n      }\n    }\n  }\n`\n"],"names":["BioBox","BioTextBox","data","useStaticQuery","author","site","siteMetadata","social","description","S","className","layout","formats","src","width","height","quality","alt","name","summary","Link","to","href","github","PostItemStyle","post","title","frontmatter","fields","slug","css","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","excerpt","PostCategoryList","cateList","categories","PostListStyle","selectCate","posts","map","key","filterPosts","filter","find","cate","CategoryItemStyle","item","setSelectCate","fieldValue","totalCount","type","onClick","replace","toUpperCase","CategoryListStyle","allPostNum","allMarkdownRemark","group","cateItem","location","siteTitle","nodes","React","length","Header","isMain","Bio","PostList"],"sourceRoot":""}