{"version":3,"file":"component---src-templates-blog-post-js-374fd10abd6799a38b17.js","mappings":"qPA6BA,IAAMA,EAAY,4aAqClB,EA9DA,YAAkC,IAAfC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KACvB,OACE,eAAKC,IAAKH,IACR,mBACE,cAAII,UAAU,QACXH,IACC,QAAC,EAAAI,KAAD,CAAMC,GAAIL,EAAKM,OAAOC,KAAMC,IAAI,SAC9B,gCACA,oBAAOR,EAAKS,YAAYC,UAI9B,cAAIP,UAAU,QACXF,IACC,QAAC,EAAAG,KAAD,CAAMC,GAAIJ,EAAKK,OAAOC,KAAMC,IAAI,SAC9B,gCACA,wBAAQP,EAAKQ,YAAYC,Y,UC4BvC,EAtCyB,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC1BC,EAAOF,EAAKG,eACZC,GAAY,UAAAJ,EAAKK,KAAKC,oBAAV,eAAwBP,QAAxB,QACVQ,EAAmBP,EAAnBO,SAAUjB,EAASU,EAATV,KACZkB,EAAWR,EAAKG,eAAeL,YAAYW,WACjD,OACE,yBACE,QAACC,EAAA,EAAD,CAAQC,QAAQ,KAChB,QAAC,IAAD,CAAeV,SAAUA,EAAUF,MAAOK,IACxC,QAAC,IAAD,CACEL,MAAOG,EAAKJ,YAAYC,MACxBa,YAAaV,EAAKJ,YAAYc,aAAeV,EAAKW,WAEpD,mBACErB,UAAU,YACVsB,WAAS,EACTC,SAAS,8BAET,uBACE,cAAIC,SAAS,YAAYd,EAAKJ,YAAYC,QAC1C,gBAAMP,UAAU,QAAQU,EAAKJ,YAAYmB,MACxCT,IAAY,QAACU,EAAA,EAAD,CAAkBV,SAAUA,IAAc,MAEzD,mBACEW,wBAAyB,CAAEC,OAAQlB,EAAKmB,MACxCL,SAAS,iBAEX,oBACA,uBACE,QAACM,EAAA,EAAD,SAGJ,QAAC,EAAD,CAASjC,KAAMkB,EAAUjB,KAAMA","sources":["webpack://gatsby-starter-blog/./src/components/PostNav/PostNav.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["import { css } from \"@emotion/react\"\nimport { Link } from \"gatsby\"\nimport React from \"react\"\n\nfunction PostNav({ prev, next }) {\n  return (\n    <nav css={PostNavStyle}>\n      <ul>\n        <li className=\"prev\">\n          {prev && (\n            <Link to={prev.fields.slug} rel=\"prev\">\n              <span>⬅️ 이전 글</span>\n              <span>{prev.frontmatter.title}</span>\n            </Link>\n          )}\n        </li>\n        <li className=\"next\">\n          {next && (\n            <Link to={next.fields.slug} rel=\"next\">\n              <span>다음 글 ➡️</span>\n              <span> {next.frontmatter.title}</span>\n            </Link>\n          )}\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nconst PostNavStyle = css`\n  font-family: \"Nanum Gothic\", sans-serif;\n  ul {\n    margin: var(--spacing-0);\n    display: flex;\n    justify-content: space-between;\n    gap: 30px;\n    list-style: none;\n    padding: 0;\n    li {\n      width: calc(50% - 30px);\n      &.prev {\n        text-align: start;\n      }\n      &.next {\n        text-align: end;\n      }\n\n      a {\n        display: flex;\n        flex-direction: column;\n        color: var(--black);\n        width: 100%;\n        text-decoration: none;\n        span {\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n        }\n        &:hover {\n          color: var(--primary);\n        }\n      }\n    }\n  }\n`\n\nexport default PostNav\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport ContentLayout from \"../components/Layout/Layout\"\nimport Seo from \"../components/seo\"\nimport Bio from \"../components/Bio/Bio\"\nimport Header from \"../components/Header/Header\"\nimport PostNav from \"../components/PostNav/PostNav\"\nimport PostCategoryList from \"../components/PostCategoryList/PostCategoryList\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n  const cateList = data.markdownRemark.frontmatter.categories\n  return (\n    <>\n      <Header isMain={false} />\n      <ContentLayout location={location} title={siteTitle}>\n        <Seo\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <article\n          className=\"blog-post\"\n          itemScope\n          itemType=\"http://schema.org/Article\"\n        >\n          <header>\n            <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n            <span className=\"date\">{post.frontmatter.date}</span>\n            {cateList && <PostCategoryList cateList={cateList} />}{\" \"}\n          </header>\n          <section\n            dangerouslySetInnerHTML={{ __html: post.html }}\n            itemProp=\"articleBody\"\n          />\n          <hr />\n          <footer>\n            <Bio />\n          </footer>\n        </article>\n        <PostNav prev={previous} next={next}></PostNav>\n      </ContentLayout>\n    </>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        categories\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["PostNavStyle","prev","next","css","className","Link","to","fields","slug","rel","frontmatter","title","data","location","post","markdownRemark","siteTitle","site","siteMetadata","previous","cateList","categories","Header","isMain","description","excerpt","itemScope","itemType","itemProp","date","PostCategoryList","dangerouslySetInnerHTML","__html","html","Bio"],"sourceRoot":""}